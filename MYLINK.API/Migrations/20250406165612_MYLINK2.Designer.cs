// <auto-generated />
using System;
using Enterprise.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MYLINK.Migrations
{
    [DbContext(typeof(CeContext))]
    [Migration("20250406165612_MYLINK2")]
    partial class MYLINK2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Enterprise.Models.Apilog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apirequestdetail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("apirequestdetail");

                    b.Property<string>("Apiurl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("apiurl");

                    b.Property<string>("Descr")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descr");

                    b.Property<int?>("Emplid")
                        .HasColumnType("int")
                        .HasColumnName("emplid");

                    b.Property<int?>("EscalationId")
                        .HasColumnType("int")
                        .HasColumnName("escalation_id");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("fullname");

                    b.Property<string>("Logdate")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("logdate");

                    b.Property<int?>("NocOpId")
                        .HasColumnType("int")
                        .HasColumnName("noc_op_id");

                    b.Property<string>("Noccomments")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("noccomments");

                    b.Property<int?>("Secpriority")
                        .HasColumnType("int")
                        .HasColumnName("secpriority");

                    b.Property<string>("Triagecasenumber")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("triagecasenumber");

                    b.HasKey("Id")
                        .HasName("PK__apilogs__3213E83F0E914DBC");

                    b.ToTable("apilogs", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Batchname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("batchname");

                    b.Property<int?>("Batchstatus")
                        .HasColumnType("int")
                        .HasColumnName("batchstatus");

                    b.Property<int?>("Batchtype")
                        .HasColumnType("int")
                        .HasColumnName("batchtype");

                    b.Property<string>("Filelocationpath")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("filelocationpath");

                    b.HasKey("Id")
                        .HasName("PK__batch__3213E83F092744A3");

                    b.ToTable("batch", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Batchtype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Batchtypename")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("batchtypename");

                    b.HasKey("Id")
                        .HasName("PK__batchtyp__3213E83FD954BA5B");

                    b.ToTable("batchtype", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Bu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Buhqaddress1")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("buhqaddress1");

                    b.Property<string>("Buhqaddress2")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("buhqaddress2");

                    b.Property<string>("Buhqcity")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("buhqcity");

                    b.Property<string>("Buhqpostal")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("buhqpostal");

                    b.Property<string>("Buhqstate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("buhqstate");

                    b.Property<string>("Buname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("buname");

                    b.Property<int?>("Companyid")
                        .HasColumnType("int")
                        .HasColumnName("companyid");

                    b.HasKey("Id")
                        .HasName("PK__bu__3213E83F4E00786F");

                    b.ToTable("bu", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Certcalogue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Certlevel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("certlevel");

                    b.Property<double?>("Certlistcost")
                        .HasColumnType("float")
                        .HasColumnName("certlistcost");

                    b.Property<double?>("Certlistdiscountstd")
                        .HasColumnType("float")
                        .HasColumnName("certlistdiscountstd");

                    b.Property<double?>("Certlistdiscountvprate")
                        .HasColumnType("float")
                        .HasColumnName("certlistdiscountvprate");

                    b.Property<int?>("Certtype")
                        .HasColumnType("int")
                        .HasColumnName("certtype");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .HasColumnName("description")
                        .IsFixedLength();

                    b.Property<string>("Enddate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("enddate");

                    b.Property<byte?>("Endoflife")
                        .HasColumnType("tinyint")
                        .HasColumnName("endoflife");

                    b.Property<string>("Precursortraining1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("precursortraining1");

                    b.Property<string>("Precursortraining2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("precursortraining2");

                    b.Property<string>("Sku")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("sku");

                    b.Property<int?>("Trainingid")
                        .HasColumnType("int")
                        .HasColumnName("trainingid");

                    b.Property<string>("Vendor")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("vendor");

                    b.Property<string>("Version")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("PK__certcalo__3213E83FC6A88CE8");

                    b.ToTable("certcalogue", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Certification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Bu")
                        .HasColumnType("int")
                        .HasColumnName("bu");

                    b.Property<DateTime?>("Certdate")
                        .HasColumnType("datetime")
                        .HasColumnName("certdate");

                    b.Property<string>("Certificationbloburl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("certificationbloburl");

                    b.Property<string>("Certlevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("certlevel");

                    b.Property<string>("Certname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("certname");

                    b.Property<int?>("Certype")
                        .HasColumnType("int")
                        .HasColumnName("certype");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("comments");

                    b.Property<int?>("Companyid")
                        .HasColumnType("int")
                        .HasColumnName("companyid");

                    b.Property<byte?>("Employee")
                        .HasColumnType("tinyint")
                        .HasColumnName("employee");

                    b.Property<string>("EmployeeEmail")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Employeeid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("employeeid");

                    b.Property<int?>("Employeeidasinteger")
                        .HasColumnType("int")
                        .HasColumnName("employeeidasinteger");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("fullname");

                    b.Property<DateTime?>("Revisedate")
                        .HasColumnType("datetime")
                        .HasColumnName("revisedate");

                    b.Property<string>("Revision")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("revision");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("PK__certific__3213E83FEE692C4F");

                    b.ToTable("certifications", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Certrequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Certid")
                        .HasColumnType("int")
                        .HasColumnName("certid");

                    b.Property<int?>("Learnid1")
                        .HasColumnType("int")
                        .HasColumnName("learnid1");

                    b.Property<int?>("Learnid2")
                        .HasColumnType("int")
                        .HasColumnName("learnid2");

                    b.Property<int?>("Learnid3")
                        .HasColumnType("int")
                        .HasColumnName("learnid3");

                    b.Property<int?>("Learnid4")
                        .HasColumnType("int")
                        .HasColumnName("learnid4");

                    b.Property<int?>("Learnid5")
                        .HasColumnType("int")
                        .HasColumnName("learnid5");

                    b.HasKey("Id")
                        .HasName("PK__certrequ__3213E83FD8BF3F01");

                    b.ToTable("certrequirements", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Certtype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .HasColumnName("description")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK__certtype__3213E83FD43A4C4C");

                    b.ToTable("certtype", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CertAuthority")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Companyname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("companyname");

                    b.Property<string>("Dynamicsid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dynamicsid");

                    b.Property<string>("Ncralohaid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ncralohaid");

                    b.Property<string>("Oracleid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("oracleid");

                    b.HasKey("Id")
                        .HasName("PK__company__3213E83F8560513E");

                    b.ToTable("company", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Buid")
                        .HasColumnType("int")
                        .HasColumnName("buid");

                    b.Property<int?>("Companyid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("companyid");

                    b.Property<byte?>("Employee1")
                        .HasColumnType("tinyint")
                        .HasColumnName("employee");

                    b.Property<string>("EmployeeEmail")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("EmployeeReturndate")
                        .HasColumnType("datetime")
                        .HasColumnName("employee_returndate");

                    b.Property<string>("Employeeid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("employeeid");

                    b.Property<int?>("Employeeidasint")
                        .HasColumnType("int")
                        .HasColumnName("employeeidasint");

                    b.Property<DateTime?>("Employeestartdate")
                        .HasColumnType("datetime")
                        .HasColumnName("employeestartdate");

                    b.Property<string>("Employeetenure")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("employeetenure");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("fullname");

                    b.Property<string>("Hrid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("hrid");

                    b.Property<string>("Hrsystemconstring")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("hrsystemconstring");

                    b.Property<int?>("Managerid")
                        .HasColumnType("int")
                        .HasColumnName("managerid");

                    b.Property<int?>("Regionid")
                        .HasColumnType("int")
                        .HasColumnName("regionid");

                    b.Property<int?>("Storeid")
                        .HasColumnType("int")
                        .HasColumnName("storeid");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.Property<int?>("Userprofileid")
                        .HasColumnType("int")
                        .HasColumnName("userprofileid");

                    b.HasKey("Id")
                        .HasName("PK__employee__3213E83F8DB64DBE");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.EmployeeReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Calendaryear")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("calendaryear");

                    b.Property<string>("Employeefullname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("employeefullname");

                    b.Property<string>("Notesondelivery")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("notesondelivery");

                    b.Property<string>("Reviewdate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("reviewdate");

                    b.Property<string>("Reviewdetails")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("reviewdetails");

                    b.Property<string>("Reviewgivendate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("reviewgivendate");

                    b.Property<string>("Reviewurl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("reviewurl");

                    b.HasKey("Id")
                        .HasName("PK__employee__3213E83FA439A81F");

                    b.ToTable("employee_reviews", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Gagridconfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gridinstance")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gridinstance");

                    b.Property<string>("Node1ip")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("node1ip");

                    b.Property<string>("Node1port")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("node1port");

                    b.Property<string>("Node2ip")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("node2ip");

                    b.Property<string>("Node2port")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("node2port");

                    b.Property<string>("Node3ip")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("node3ip");

                    b.Property<string>("Node3port")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("node3port");

                    b.Property<string>("Nodedbm1sid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nodedbm1sid");

                    b.Property<string>("Nodedbm2sid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nodedbm2sid");

                    b.Property<string>("Nodedbm3sid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nodedbm3sid");

                    b.Property<string>("Nodedbms1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nodedbms1");

                    b.Property<string>("Nodedbms2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nodedbms2");

                    b.Property<string>("Nodedbms3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nodedbms3");

                    b.Property<int?>("Nodeid")
                        .HasColumnType("int")
                        .HasColumnName("nodeid");

                    b.Property<string>("Nodename")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nodename");

                    b.Property<int?>("Regionid")
                        .HasColumnType("int")
                        .HasColumnName("regionid");

                    b.Property<string>("Sqllocaltype")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sqllocaltype");

                    b.HasKey("Id")
                        .HasName("PK__gagridco__3213E83F662BEC4C");

                    b.ToTable("gagridconfig", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Learndetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cataloguesku")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cataloguesku");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("category")
                        .IsFixedLength();

                    b.Property<string>("Certauthority")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("certauthority");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .HasColumnName("description")
                        .IsFixedLength();

                    b.Property<byte?>("Employee")
                        .HasColumnType("tinyint")
                        .HasColumnName("employee");

                    b.Property<string>("Employeeid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("employeeid");

                    b.Property<int?>("Employeeidasint")
                        .HasColumnType("int")
                        .HasColumnName("employeeidasint");

                    b.Property<string>("Enddate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("enddate");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("fullname");

                    b.Property<int?>("Learningmodulesid")
                        .HasColumnType("int")
                        .HasColumnName("learningmodulesid");

                    b.Property<string>("Startdate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("startdate");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("PK__learndet__3213E83FCC53A3EA");

                    b.ToTable("learndetail", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Learningmodule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("author");

                    b.Property<byte?>("Authorcomp")
                        .HasColumnType("tinyint")
                        .HasColumnName("authorcomp");

                    b.Property<string>("Authorcontact")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("authorcontact");

                    b.Property<string>("Cataloguesku")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("cataloguesku");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description");

                    b.Property<byte?>("Emprequired")
                        .HasColumnType("tinyint")
                        .HasColumnName("emprequired");

                    b.Property<int?>("Uisection")
                        .HasColumnType("int")
                        .HasColumnName("uisection");

                    b.Property<string>("Videourl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("videourl");

                    b.HasKey("Id")
                        .HasName("PK__learning__3213E83FD6B7E6C2");

                    b.ToTable("learningmodules", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Companyid")
                        .HasColumnType("int")
                        .HasColumnName("companyid");

                    b.Property<int?>("Emplid")
                        .HasColumnType("int")
                        .HasColumnName("emplid");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("fullname");

                    b.Property<string>("Saddress1")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("saddress1");

                    b.Property<string>("Saddress2")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("saddress2");

                    b.Property<string>("Scity")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("scity");

                    b.Property<string>("Sstate")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("sstate");

                    b.Property<int?>("Storeid")
                        .HasColumnType("int")
                        .HasColumnName("storeid");

                    b.Property<string>("Szipcode")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("szipcode");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("PK__manager__3213E83F528A6CCB");

                    b.ToTable("manager", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Bu")
                        .HasColumnType("int")
                        .HasColumnName("bu");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("description");

                    b.Property<string>("Hqaddress1")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("hqaddress1");

                    b.Property<string>("Hqaddress2")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("hqaddress2");

                    b.Property<string>("Hqcity")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("hqcity");

                    b.Property<string>("Hqstate")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("hqstate");

                    b.Property<string>("Hqzipcode")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("hqzipcode");

                    b.HasKey("Id")
                        .HasName("PK__regions__3213E83F14FFAB69");

                    b.ToTable("regions", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Resdetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .HasColumnName("category")
                        .IsFixedLength();

                    b.Property<string>("Certauthority")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("certauthority");

                    b.Property<string>("Descr")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descr");

                    b.Property<int?>("Emplid")
                        .HasColumnType("int")
                        .HasColumnName("emplid");

                    b.Property<byte?>("Employee")
                        .HasColumnType("tinyint")
                        .HasColumnName("employee");

                    b.Property<string>("Enddate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("enddate");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("fullname");

                    b.Property<string>("Location")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("location");

                    b.Property<string>("Startdate")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("startdate");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("PK__resdetai__3213E83F0C57D4D7");

                    b.ToTable("resdetail", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("address1");

                    b.Property<string>("Address2")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("address2");

                    b.Property<int?>("Bu")
                        .HasColumnType("int")
                        .HasColumnName("bu");

                    b.Property<string>("City")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("city");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("description");

                    b.Property<int?>("Regionid")
                        .HasColumnType("int")
                        .HasColumnName("regionid");

                    b.Property<string>("State")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("state");

                    b.Property<string>("Zipcode")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("zipcode");

                    b.HasKey("Id")
                        .HasName("PK__stores__3213E83FB79848BE");

                    b.ToTable("stores", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Azureid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("azureid");

                    b.Property<int?>("Companyid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("companyid");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<byte?>("Employee")
                        .HasColumnType("tinyint")
                        .HasColumnName("employee");

                    b.Property<string>("Employeeid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("employeeid");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("firstname");

                    b.Property<string>("Fullname")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("fullname");

                    b.Property<string>("Hashedpassword")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("hashedpassword");

                    b.Property<int?>("Jid")
                        .HasColumnType("int")
                        .HasColumnName("jid");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastname");

                    b.Property<string>("Microsoftid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("microsoftid");

                    b.Property<string>("Ncrid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ncrid");

                    b.Property<string>("Oracleid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("oracleid");

                    b.Property<int?>("Passwordtype")
                        .HasColumnType("int")
                        .HasColumnName("passwordtype");

                    b.Property<string>("Plainpassword")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("plainpassword");

                    b.Property<string>("Profileurl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("profileurl");

                    b.Property<string>("ResetToken")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("resettoken");

                    b.Property<DateTime?>("ResetTokenExpiration")
                        .HasColumnType("datetime")
                        .HasColumnName("resettokenexpiration");

                    b.Property<string>("Role")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F96DA4CA5");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Useraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte?>("Acknowledged")
                        .HasColumnType("tinyint")
                        .HasColumnName("acknowledged");

                    b.Property<int?>("Actionpriority")
                        .HasColumnType("int")
                        .HasColumnName("actionpriority");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("PK__useracti__3213E83FA741FB5D");

                    b.ToTable("useractions", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Userhelp", b =>
                {
                    b.Property<string>("Bestcontactnumber")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("bestcontactnumber");

                    b.Property<string>("Descr")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descr");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Emplid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("emplid");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("fullname");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Replied")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("replied");

                    b.Property<string>("Repliedmanageremail")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("repliedmanageremail");

                    b.Property<int?>("Repliedmanagerid")
                        .HasColumnType("int")
                        .HasColumnName("repliedmanagerid");

                    b.Property<string>("Repliedmanagerphone")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("repliedmanagerphone");

                    b.Property<int?>("Severity")
                        .HasColumnType("int")
                        .HasColumnName("severity");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.ToTable("userhelp", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Userlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descr")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descr");

                    b.Property<int?>("Emplid")
                        .HasColumnType("int")
                        .HasColumnName("emplid");

                    b.Property<int?>("EscalationId")
                        .HasColumnType("int")
                        .HasColumnName("escalation_id");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("fullname");

                    b.Property<string>("Logdate")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("logdate");

                    b.Property<int?>("NocOpId")
                        .HasColumnType("int")
                        .HasColumnName("noc_op_id");

                    b.Property<string>("Noccomments")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("noccomments");

                    b.Property<string>("Role")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("role");

                    b.Property<int?>("Secpriority")
                        .HasColumnType("int")
                        .HasColumnName("secpriority");

                    b.Property<string>("Triagecasenumber")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("triagecasenumber");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("PK__userlogs__3213E83F0B3CC5C1");

                    b.ToTable("userlogs", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Userprofile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activepictureurl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("activepictureurl");

                    b.Property<string>("Address1")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("address1");

                    b.Property<string>("Address2")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("address2");

                    b.Property<string>("Cellphone")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cellphone");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Employeeid")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("employeeid");

                    b.Property<string>("Facebookurl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("facebookurl");

                    b.Property<string>("Googleurl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("googleurl");

                    b.Property<string>("Instagramurl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("instagramurl");

                    b.Property<string>("Linkedinurl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("linkedinurl");

                    b.Property<string>("Maritalstatus")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("maritalstatus");

                    b.Property<string>("Phone")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("phone");

                    b.Property<string>("Postalzip")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("postalzip");

                    b.Property<string>("Pronoun")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("pronoun");

                    b.Property<byte?>("Sms")
                        .HasColumnType("tinyint")
                        .HasColumnName("sms");

                    b.Property<string>("Stateregion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("stateregion");

                    b.Property<string>("Title")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("title");

                    b.Property<string>("Title2")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("title2");

                    b.Property<string>("University")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("university");

                    b.Property<string>("University1")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("university1");

                    b.Property<string>("University2")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("university2");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.Property<string>("Vimeourl")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("vimeourl");

                    b.HasKey("Id")
                        .HasName("PK__userprof__3213E83F92265540");

                    b.ToTable("userprofile", (string)null);
                });

            modelBuilder.Entity("Enterprise.Models.Usersession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte?>("Acknowledged")
                        .HasColumnType("tinyint")
                        .HasColumnName("acknowledged");

                    b.Property<int?>("Actionpriority")
                        .HasColumnType("int")
                        .HasColumnName("actionpriority");

                    b.Property<DateTime?>("Sessionend")
                        .HasColumnType("datetime")
                        .HasColumnName("sessionend");

                    b.Property<int?>("Sessionrecorded")
                        .HasColumnType("int")
                        .HasColumnName("sessionrecorded");

                    b.Property<string>("Sessionrecordurl")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("sessionrecordurl");

                    b.Property<DateTime?>("Sessionstart")
                        .HasColumnType("datetime")
                        .HasColumnName("sessionstart");

                    b.Property<string>("Token")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("token");

                    b.Property<int?>("Userid")
                        .HasColumnType("int")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("PK__usersess__3213E83F08046578");

                    b.ToTable("usersessions", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
